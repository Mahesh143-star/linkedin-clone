{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\client\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport API from '../api';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [content, setContent] = useState('');\n  const fetchPosts = async () => {\n    try {\n      const res = await API.get('/posts');\n      setPosts(res.data);\n    } catch {\n      alert('Failed to fetch posts');\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const submitPost = async e => {\n    e.preventDefault();\n    if (!content.trim()) return;\n    try {\n      await API.post('/posts', {\n        content\n      });\n      setContent('');\n      fetchPosts();\n    } catch {\n      alert('Failed to create post');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitPost,\n      className: \"post-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"textarea\",\n        placeholder: \"What's on your mind?\",\n        rows: 3,\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: [posts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-posts\",\n        children: \"No posts yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 32\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-author\",\n          children: post.author.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-date\",\n          children: new Date(post.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"Fz6jb3z6FDAyaXrNf8bhSJO+T6s=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","API","jsxDEV","_jsxDEV","Home","_s","posts","setPosts","content","setContent","fetchPosts","res","get","data","alert","submitPost","e","preventDefault","trim","post","className","children","onSubmit","placeholder","rows","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","length","map","author","name","Date","createdAt","toLocaleString","id","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/client/src/pages/Home.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport API from '../api';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [content, setContent] = useState('');\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const res = await API.get('/posts');\r\n      setPosts(res.data);\r\n    } catch {\r\n      alert('Failed to fetch posts');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const submitPost = async (e) => {\r\n    e.preventDefault();\r\n    if (!content.trim()) return;\r\n    try {\r\n      await API.post('/posts', { content });\r\n      setContent('');\r\n      fetchPosts();\r\n    } catch {\r\n      alert('Failed to create post');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={submitPost} className=\"post-form\">\r\n        <textarea\r\n          className=\"textarea\"\r\n          placeholder=\"What's on your mind?\"\r\n          rows={3}\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n        <button className=\"btn btn-success\">Post</button>\r\n      </form>\r\n\r\n      <div className=\"posts-list\">\r\n        {posts.length === 0 && <p className=\"no-posts\">No posts yet.</p>}\r\n        {posts.map((post) => (\r\n          <div key={post.id} className=\"card\">\r\n            <p className=\"post-author\">{post.author.name}</p>\r\n            <p className=\"post-date\">{new Date(post.createdAt).toLocaleString()}</p>\r\n            <p>{post.content}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}